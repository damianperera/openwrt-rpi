
name: build
on:
  push:
    branches:
      - main
  schedule:
    - cron:  '0 */24 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Sync and Build
    steps:
    - name: Checkout damianperera/openwrt-rpi
      uses: actions/checkout@v2
    - name: Checkout wulfy23/rpi4
      uses: actions/checkout@v2
      with:
        repository: wulfy23/rpi4
        path: wulfy
    - name: Mount OpenWRT image
      run: |
       pwd=$(pwd)
       cd wulfy/builds/devel
       cd "$(ls -t1 -d rpi-4_*/ | head -n1)"
       gunzip -v *.img.gz || echo 0
       mv *.img $pwd/rpi.img
       cd $pwd
       kpartx="$(sudo kpartx -avs rpi.img)"
       blockDevices=($(grep -o 'loop.p.' <<<"$kpartx"))
       sleep 0.5
       boot=/dev/mapper/${blockDevices[0]}
       root=/dev/mapper/${blockDevices[1]}
       echo Attempting to mount boot to $boot and root to $root
       sudo mkdir -p /mnt/rpi4
       sudo mount -t ext4 $root /mnt/rpi4
       sudo mkdir -p /mnt/rpi4/boot
       sudo mount -t vfat $boot /mnt/rpi4/boot
       echo "OpenWRT Image Details:"
       df -h /mnt/rpi4/boot /mnt/rpi4 | sed -e "s#$(pwd)/##"
       echo "boot=${blockDevices[0]}" >> $GITHUB_ENV
       echo "root=${blockDevices[1]}" >> $GITHUB_ENV
    - name: Update configurations
      run: |
       echo Update OpenWRT configs
       sudo cp config/* /mnt/rpi4/etc/config/
    - name: Unmount filesystems
      run: |
       echo Unmount updated filesystems
       df -h
       sudo umount /dev/mapper/${{ env.boot }}
       sudo umount /dev/mapper/${{ env.root }}
       sudo kpartx -dvs rpi.img
    - name: Publish release
      id: create_tag
      run: |
        echo "::set-output name=tag::$(date +%Y.%m.%d-%H:%M:%S)"
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: true
        prerelease: false
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rpi.img
        asset_name: openwrt.img
        asset_content_type: application/x-ima
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
